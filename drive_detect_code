#include "CytronMotorDriver.h"
#include <NewPing.h>


#define VRX_PIN A2 // Arduino pin connected to VRX pin at analog pin A0
#define VRY_PIN A1 // Arduino pin connected to VRY pin at analog pin A1


//SENSORS
const int maxDistance = 2000;
const int trigPin_FR= 35;
const int echoPin_FR = 34;
const int trigPin_FL = 36;
const int echoPin_FL = 37;
const int trigPin_R= 39;
const int echoPin_R = 38;
NewPing sonar_FR(trigPin_FR, echoPin_FR, maxDistance);
NewPing sonar_FL(trigPin_FL, echoPin_FL, maxDistance);
NewPing sonar_R(trigPin_R, echoPin_R, maxDistance);




const int buzzerPin = 6;
const int ledPin = 7;
int distance;
int speedUp = 80;
int speedDown = 80;
int speedSides = 60;


// Configure the motor driver.
CytronMD motor1(PWM_DIR, 2, 46);  // PWM 1 = Pin 48, DIR 1 = Pin 46.
CytronMD motor2(PWM_DIR, 4, 50); // PWM 2 = Pin 52, DIR 2 = Pin 50.


//JOYSTICKKKKK
int xValue = 0; // To store value of the X axis
int yValue = 0; // To store value of the Y axis
int threshold = 50; // Threshold value for joystick movement detection


void setup() {
  pinMode(trigPin_FR, OUTPUT); // Sets the TrigPin1as an Output
  pinMode(echoPin_FR, INPUT); // Sets the echoPin as an Input
  pinMode(trigPin_FL, OUTPUT); // Sets the TrigPin1as an Output
  pinMode(echoPin_FL, INPUT); // Sets the echoPin as an Input
  pinMode(trigPin_R, OUTPUT); // Sets the TrigPin1as an Output
  pinMode(echoPin_R, INPUT); // Sets the echoPin as an Input
  pinMode(buzzerPin, OUTPUT);
  pinMode(ledPin, OUTPUT);
  Serial.begin(9600); // Starts the serial communication
}


void loop() {
  // Read the distances from each sensor
  int distance_FR = sonar_FR.ping_in();
  int distance_FL = sonar_FL.ping_in();
  int distance_R = sonar_R.ping_in();


  // Print the distance readings in the serial monitor
  Serial.print(" Front Right distance: ");
  Serial.print(distance_FR);
  Serial.print(" in");


  Serial.print(" Front Left distance: ");
  Serial.print(distance_FL);
  Serial.print(" in");


  Serial.print(" Rear distance: ");
  Serial.print(distance_R);
  Serial.println(" in");


// read analog X and Y analog values
  xValue = analogRead(VRX_PIN);
  yValue = analogRead(VRY_PIN);


  motor1.setSpeed(0); // Motor 1 stops.
  motor2.setSpeed(0); // Motor 2 stops.


  if (distance_FR == 0){
    distance_FR = 72;
  } if (distance_FL == 0){
    distance_FL = 72;
  } if (distance_R == 0){
    distance_R = 72;
  }
  //ALERT SYSTEM
  if ((distance_FR < 12 || distance_FL < 12 || distance_R < 12) && (distance_FR > 0 && distance_FL > 0 && distance_R > 0)){
    digitalWrite(buzzerPin, HIGH);
    digitalWrite(ledPin, HIGH);
    delay(100);
    digitalWrite(ledPin, LOW);
   
 
  } else if (((distance_FR >= 12 && distance_FR < 72) || (distance_FL >= 12 && distance_FL < 72)) || (distance_R >= 12 && distance_R < 72)) {
    digitalWrite(buzzerPin, HIGH); // turn the buzzer on
    delay(100); // wait for 100ms
    digitalWrite(buzzerPin, LOW); // turn the buzzer off
    delay(100); // wait for 100ms
    digitalWrite(ledPin, HIGH);
   
    } else {
      // Turn off the LED and the buzzerPin
      digitalWrite(ledPin, LOW);
      digitalWrite(buzzerPin, LOW);
      }
     
  // STOPPING SYSTEM
  if ((distance_FR < 12 || distance_FL < 12) && (distance_R >= 72 || distance_R = 0)) {
    // Code for front stop
    speedUp = 0;
    speedDown = 80;
   
  } else if ((distance_FR >= 72 && distance_FL >= 72) && distance_R < 12 ) {
    // Code for rear stop
    speedUp = 80;
    speedDown = 0;


  } else if((distance_FR < 12 || distance_FL < 12) && distance_R < 12 ){
    // stop Both
    speedUp = 0;
    speedDown = 0;
   
  } else if(((distance_FR >= 12 && distance_FR < 72) || (distance_FL >= 12 && distance_FL < 72)) && (distance_R >= 72) ) {
    speedUp = 40;
    speedDown = 80;


  } else if(distance_FR >= 72 && distance_FL >= 72) && (distance_R >=12 && distance_R < 72) {
    speedUp = 80;
    speedDown = 40;
   
  } else{
    speedUp = 80;
    speedDown = 80;
  }




    Serial.print("SpeedUp= ");
    Serial.print(speedUp);
    Serial.print("; SpeedDown= ");
    Serial.print(speedDown);
  Joystick ();


 delay(250); //pause to let things settle


}


void Joystick () {
//Left Case
  if (xValue < threshold)
  {
    motor1.setSpeed(speedSides + 10);  // Motor 1 runs forward at 50% speed.
    motor2.setSpeed(-speedSides + 10); // Motor 2 runs backward at 50% speed.
    //Serial.print("\n");
    Serial.print(" Left");
  }


  //Right Case
  else if (xValue > 1024 - threshold)
  {
    motor1.setSpeed(-speedSides + 10); // Motor 1 runs backward at 50% speed.
    motor2.setSpeed(speedSides + 10);  // Motor 2 runs forward at 50% speed.
    //Serial.print("\n");
    Serial.print(" Right");
  }


  //Up Case
   else if (yValue > 1024 - threshold)
  {
    motor1.setSpeed(speedUp); // Motor 1 runs forward at 50% speed.
    motor2.setSpeed(speedUp); // Motor 2 runs forward at 50% speed.
    //Serial.print("\n");
    Serial.print(" Up");
  }


  //Down Case
   else if (yValue < threshold)
  {
    motor1.setSpeed(-speedDown); // Motor 1 runs backward at 50% speed.
    motor2.setSpeed(-speedDown); // Motor 2 runs backward at 50% speed.
    //Serial.print("\n");
    Serial.print(" Down");
  }


  //Stop Case
  else
  {
    motor1.setSpeed(0);
    motor2.setSpeed(0);
    //Serial.print("\n");
    Serial.print(" Stop");
  }
}
